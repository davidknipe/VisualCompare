@model VisualCompareMode.Models.GetDiffBootstrapperModel

<!DOCTYPE html>
<html>
<head>
    <style>
        html {
            height: 100vh;
        }

        body {
            min-height: 100vh;
        }

        @@keyframes lds-rolling {
            0% {
                -webkit-transform: translate(-50%, -50%) rotate(0deg);
                transform: translate(-50%, -50%) rotate(0deg);
            }

            100% {
                -webkit-transform: translate(-50%, -50%) rotate(360deg);
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }

        @@-webkit-keyframes lds-rolling {
            0% {
                -webkit-transform: translate(-50%, -50%) rotate(0deg);
                transform: translate(-50%, -50%) rotate(0deg);
            }

            100% {
                -webkit-transform: translate(-50%, -50%) rotate(360deg);
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }

        .lds-rolling {
            position: relative;
            margin-left: auto;
            margin-right: auto;
        }

        .lds-rolling div,
        .lds-rolling div:after {
            position: absolute;
            width: 100px;
            height: 100px;
            border: 20px solid #1ba4fa;
            border-top-color: transparent;
            border-radius: 50%;
        }

        .lds-rolling div {
            -webkit-animation: lds-rolling 1s linear infinite;
            animation: lds-rolling 1s linear infinite;
            top: 100px;
            left: 100px;
        }

        .lds-rolling div:after {
            -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
        }

        .lds-rolling {
            width: 200px !important;
            height: 200px !important;
            -webkit-transform: translate(-100px, -100px) scale(1) translate(100px, 100px);
            transform: translate(-100px, -100px) scale(1) translate(100px, 100px);
            top: 30%;
        }

        .epi-spinnerOverlay {
            display: block; /* Hidden by default */
            width: 100%; /* Full width (cover the whole page) */
            height: 100vh; /* Full height (cover the whole page) */
            min-height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            /*background-color: rgba(0,0,0,0.5); /* Black background with opacity */ */
            z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
            cursor: pointer; /* Add a pointer on hover */
        }

        .Sleek {
            font-family: Verdana,Arial,Helvetica,sans-serif;
            color: #131313;
            font-size: 13px;
        }

        #info-message {
            align-content: center;
            text-align: center;
            vertical-align: central;
        }
    </style>
</head>
<body class="Sleek">

    <div class="epi-spinnerOverlay" id="draftThumbnail-spinner">
        <div class="lds-rolling epi-abtest-thumbnail">
            <div></div>
        </div>
    </div>

    <div class="epi-spinnerOverlay" id="info-message" style="display: none">
        Files are different
    </div>

    <script>
    var firstUrl = "@Model.FirstUrl";
    var secondUrl = "@Model.SecondUrl";
    var compareUrl = "@Model.CompareUrl";

    function showMessage(text) {
        var el = document.getElementById("info-message");
        el.textContent = text;

        document.getElementById("draftThumbnail-spinner").style.display = 'none';
        el.style.display = 'block';
    }

    function compare(content1, content2, originalContentType) {
        var request = new XMLHttpRequest();
        request.open("POST", compareUrl, true);
        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        request.onload = function () {
            if (request.status == 200) {
                console.log("VisualCompare: Showing diff version");
                document.write(request.response);
            }
            else {
                showMessage("VisualCompare failed to load: " + request.status);
                console.error(request.response);
            }
        };

        var postData = "version1=" + encodeURIComponent(window.btoa(content1)) +
            "&version2=" + encodeURIComponent(window.btoa(content2)) +
            "&originalcontenttype=" + encodeURIComponent(originalContentType);
        request.send(postData);
    }

    function loadContent(url, callback) {
        var request = new XMLHttpRequest();
        request.open("GET", url, true);
        request.onload = function () {
            if (request.status == 200) {
                callback(request);
            }
            else {
                showMessage("VisualCompare failed to load: " + request.status);
                console.error(request.response);
            }
        }
        request.send();
    }

    loadContent(secondUrl, function (request) {
        console.log("VisualCompare: Got first set of content");
        var originalContentType = request.getResponseHeader('content-type');
        var content1 = request.response;
        var contentLength1 = 0;
        if (request.getResponseHeader('content-type').match("text/html") == null) {
            // Do something to check if binary files differ
            contentLength1 = request.getResponseHeader('content-length');
        }

        loadContent(firstUrl, function (request) {
            console.log("VisualCompare: Got second set of content");
            var content2 = request.response;
            var contentLength2 = 0;
            if (request.getResponseHeader('content-type').match("text/html") == null) {
                contentLength2 = request.getResponseHeader('content-length');
            }

            if (contentLength1 > 0 && contentLength2 > 0 && contentLength1 != contentLength2) {
                showMessage("Files are different");
            }
            else {
                compare(content1, content2, originalContentType);
            }
        });
    });
    </script>
</body>
</html>